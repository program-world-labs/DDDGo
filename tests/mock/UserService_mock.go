// Code generated by MockGen. DO NOT EDIT.
// Source: internal/application/user/user_interface.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	user "github.com/program-world-labs/DDDGo/internal/application/user"
	entity "github.com/program-world-labs/DDDGo/internal/domain/user/entity"
)

// MockIUserService is a mock of IUserService interface.
type MockIUserService struct {
	ctrl     *gomock.Controller
	recorder *MockIUserServiceMockRecorder
}

// MockIUserServiceMockRecorder is the mock recorder for MockIUserService.
type MockIUserServiceMockRecorder struct {
	mock *MockIUserService
}

// NewMockIUserService creates a new mock instance.
func NewMockIUserService(ctrl *gomock.Controller) *MockIUserService {
	mock := &MockIUserService{ctrl: ctrl}
	mock.recorder = &MockIUserServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIUserService) EXPECT() *MockIUserServiceMockRecorder {
	return m.recorder
}

// GetByIDUseCase mocks base method.
func (m *MockIUserService) GetByIDUseCase(ctx context.Context, id string) (*user.Output, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByIDUseCase", ctx, id)
	ret0, _ := ret[0].(*user.Output)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByIDUseCase indicates an expected call of GetByIDUseCase.
func (mr *MockIUserServiceMockRecorder) GetByIDUseCase(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByIDUseCase", reflect.TypeOf((*MockIUserService)(nil).GetByIDUseCase), ctx, id)
}

// RegisterUseCase mocks base method.
func (m *MockIUserService) RegisterUseCase(ctx context.Context, userInfo *entity.User) (*user.Output, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RegisterUseCase", ctx, userInfo)
	ret0, _ := ret[0].(*user.Output)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RegisterUseCase indicates an expected call of RegisterUseCase.
func (mr *MockIUserServiceMockRecorder) RegisterUseCase(ctx, userInfo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterUseCase", reflect.TypeOf((*MockIUserService)(nil).RegisterUseCase), ctx, userInfo)
}
