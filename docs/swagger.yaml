basePath: /v1
definitions:
  http.Response:
    properties:
      code:
        type: integer
      data: {}
      error:
        type: string
    type: object
  role.CreatedRequest:
    properties:
      description:
        example: this is for admin role
        type: string
      name:
        example: admin
        type: string
      permissions:
        example:
        - read:all
        - write:all
        items:
          type: string
        type: array
    required:
    - description
    - name
    - permissions
    type: object
  role.Response:
    properties:
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      permissions:
        items:
          type: string
        type: array
      updatedAt:
        type: string
      users:
        items:
          $ref: '#/definitions/user.Response'
        type: array
    type: object
  role.ResponseList:
    properties:
      items:
        items:
          $ref: '#/definitions/role.Response'
        type: array
      limit:
        type: integer
      offset:
        type: integer
      total:
        type: integer
    type: object
  role.UpdatedRequest:
    properties:
      description:
        example: this is for admin role
        type: string
      name:
        example: admin
        type: string
      permissions:
        example:
        - read:all
        - write:all
        items:
          type: string
        type: array
    required:
    - description
    - name
    - permissions
    type: object
  user.Response:
    properties:
      avatar:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Using a translation service as an example
  title: Go Clean Template API
  version: "1.0"
paths:
  /role/create:
    post:
      consumes:
      - application/json
      description: Create role
      operationId: CreateRole
      parameters:
      - description: Role Create Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/role.CreatedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/role.Response'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Response'
      summary: Create role
      tags:
      - Role
  /role/detail/{id}:
    get:
      consumes:
      - application/json
      description: Detail role
      operationId: DetailRole
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/role.Response'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Response'
      summary: Detail role
      tags:
      - Role
  /role/list:
    get:
      consumes:
      - application/json
      description: List role
      operationId: ListRole
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: FilterName
        in: query
        name: filterName
        type: string
      - description: SortFields
        in: query
        name: sortFields
        type: string
      - description: Dir
        in: query
        name: dir
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/role.ResponseList'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Response'
      summary: List role
      tags:
      - Role
  /role/update/{id}:
    put:
      consumes:
      - application/json
      description: Update role
      operationId: UpdateRole
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Role Update Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/role.UpdatedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Response'
      summary: Update role
      tags:
      - Role
swagger: "2.0"
