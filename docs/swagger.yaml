basePath: /v1
definitions:
  currency.CreatedRequest:
    properties:
      name:
        type: string
      symbol:
        type: string
    type: object
  currency.Response:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: string
      name:
        type: string
      symbol:
        type: string
      updatedAt:
        type: string
      walletBalances:
        items:
          $ref: '#/definitions/wallet.BalancesResponse'
        type: array
    type: object
  currency.ResponseList:
    properties:
      items:
        items:
          $ref: '#/definitions/currency.Response'
        type: array
      limit:
        type: integer
      offset:
        type: integer
      total:
        type: integer
    type: object
  currency.UpdatedRequest:
    properties:
      name:
        type: string
      symbol:
        type: string
    type: object
  entity.Chain:
    enum:
    - None
    - Bitcoin
    - Ethereum
    - Polygon
    type: string
    x-enum-varnames:
    - None
    - Bitcoin
    - Ethereum
    - Polygon
  group.CreatedRequest:
    properties:
      description:
        example: this is for group
        type: string
      name:
        example: GroupA
        type: string
      ownerId:
        type: string
    required:
    - description
    - name
    type: object
  group.Response:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      ownerId:
        type: string
      updatedAt:
        type: string
      users:
        items:
          $ref: '#/definitions/user.Response'
        type: array
    type: object
  group.ResponseList:
    properties:
      items:
        items:
          $ref: '#/definitions/group.Response'
        type: array
      limit:
        type: integer
      offset:
        type: integer
      total:
        type: integer
    type: object
  group.UpdatedRequest:
    properties:
      description:
        example: this is for admin role
        type: string
      name:
        example: admin
        type: string
    required:
    - description
    - name
    type: object
  http.Response:
    properties:
      code:
        type: integer
      data: {}
      error:
        type: string
    type: object
  role.CreatedRequest:
    properties:
      description:
        example: this is for admin role
        type: string
      name:
        example: admin
        type: string
      permissions:
        example:
        - read:all
        - write:all
        items:
          type: string
        type: array
    required:
    - description
    - name
    - permissions
    type: object
  role.Response:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      permissions:
        items:
          type: string
        type: array
      updatedAt:
        type: string
      users:
        items:
          $ref: '#/definitions/user.Response'
        type: array
    type: object
  role.ResponseList:
    properties:
      items:
        items:
          $ref: '#/definitions/role.Response'
        type: array
      limit:
        type: integer
      offset:
        type: integer
      total:
        type: integer
    type: object
  role.UpdatedRequest:
    properties:
      description:
        example: this is for admin role
        type: string
      name:
        example: admin
        type: string
      permissions:
        example:
        - read:all
        - write:all
        items:
          type: string
        type: array
    required:
    - description
    - name
    - permissions
    type: object
  user.CreatedRequest:
    properties:
      avatar:
        type: string
      displayName:
        type: string
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  user.Response:
    properties:
      avatar:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      username:
        type: string
    type: object
  user.ResponseList:
    properties:
      items:
        items:
          $ref: '#/definitions/user.Response'
        type: array
      limit:
        type: integer
      offset:
        type: integer
      total:
        type: integer
    type: object
  user.UpdateRequest:
    properties:
      avatar:
        type: string
      displayName:
        type: string
    type: object
  wallet.BalancesResponse:
    properties:
      balance:
        type: integer
      currencyId:
        type: string
      decimal:
        type: integer
      id:
        type: string
      walletId:
        type: string
    type: object
  wallet.CreatedRequest:
    properties:
      chain:
        allOf:
        - $ref: '#/definitions/entity.Chain'
        example: Polygon
      description:
        example: this is for admin wallet
        type: string
      name:
        example: admin
        type: string
      userId:
        example: abcdef2nopabcdef2nop
        type: string
    required:
    - chain
    - description
    - name
    - userId
    type: object
  wallet.Response:
    properties:
      chain:
        allOf:
        - $ref: '#/definitions/entity.Chain'
        example: Polygon
      createdAt:
        type: string
      deletedAt:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
      userId:
        example: abcd-efgh-ijkl-mnop
        type: string
      walletBalances:
        items:
          $ref: '#/definitions/wallet.BalancesResponse'
        type: array
    required:
    - chain
    - userId
    type: object
  wallet.ResponseList:
    properties:
      items:
        items:
          $ref: '#/definitions/wallet.Response'
        type: array
      limit:
        type: integer
      offset:
        type: integer
      total:
        type: integer
    type: object
  wallet.UpdatedRequest:
    properties:
      chain:
        allOf:
        - $ref: '#/definitions/entity.Chain'
        example: Polygon
      description:
        example: this is for admin wallet
        type: string
      name:
        example: admin
        type: string
      userId:
        example: abcd-efgh-ijkl-mnop
        type: string
    required:
    - chain
    - description
    - name
    - userId
    type: object
host: localhost:8080
info:
  contact: {}
  description: Using AI to do something.
  title: AI Service API
  version: "1.0"
paths:
  /currency/create:
    post:
      consumes:
      - application/json
      description: Create currency
      operationId: CreateCurrency
      parameters:
      - description: Currency Create Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/currency.CreatedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/currency.Response'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Response'
      summary: Create currency
      tags:
      - Currency
  /currency/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete currency
      operationId: DeleteCurrency
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/currency.Response'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Response'
      summary: Delete currency
      tags:
      - Currency
  /currency/detail/{id}:
    get:
      consumes:
      - application/json
      description: Detail currency
      operationId: DetailCurrency
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/currency.Response'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Response'
      summary: Detail currency
      tags:
      - Currency
  /currency/list:
    get:
      consumes:
      - application/json
      description: List currency
      operationId: ListCurrency
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: FilterName
        in: query
        name: filterName
        type: string
      - description: SortFields
        in: query
        name: sortFields
        type: string
      - description: Dir
        in: query
        name: dir
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/currency.ResponseList'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Response'
      summary: List currency
      tags:
      - Currency
  /currency/update/{id}:
    put:
      consumes:
      - application/json
      description: Update currency
      operationId: UpdateCurrency
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Currency Update Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/currency.UpdatedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/currency.Response'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Response'
      summary: Update currency
      tags:
      - Currency
  /group/create:
    post:
      consumes:
      - application/json
      description: Create group
      operationId: CreateGroup
      parameters:
      - description: Group Create Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/group.CreatedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/group.Response'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Response'
      summary: Create group
      tags:
      - Group
  /group/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete group
      operationId: DeleteGroup
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/group.Response'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Response'
      summary: Delete group
      tags:
      - Group
  /group/detail/{id}:
    get:
      consumes:
      - application/json
      description: Detail group
      operationId: DetailGroup
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/group.Response'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Response'
      summary: Detail group
      tags:
      - Group
  /group/list:
    get:
      consumes:
      - application/json
      description: List group
      operationId: ListGroup
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: FilterName
        in: query
        name: filterName
        type: string
      - description: SortFields
        in: query
        name: sortFields
        type: string
      - description: Dir
        in: query
        name: dir
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/group.ResponseList'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Response'
      summary: List group
      tags:
      - Group
  /group/update/{id}:
    put:
      consumes:
      - application/json
      description: Update group
      operationId: UpdateGroup
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Group Update Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/group.UpdatedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/group.Response'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Response'
      summary: Update group
      tags:
      - Group
  /role/create:
    post:
      consumes:
      - application/json
      description: Create role
      operationId: CreateRole
      parameters:
      - description: Role Create Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/role.CreatedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/role.Response'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Response'
      summary: Create role
      tags:
      - Role
  /role/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete role
      operationId: DeleteRole
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/role.Response'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Response'
      summary: Delete role
      tags:
      - Role
  /role/detail/{id}:
    get:
      consumes:
      - application/json
      description: Detail role
      operationId: DetailRole
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/role.Response'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Response'
      summary: Detail role
      tags:
      - Role
  /role/list:
    get:
      consumes:
      - application/json
      description: List role
      operationId: ListRole
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: FilterName
        in: query
        name: filterName
        type: string
      - description: SortFields
        in: query
        name: sortFields
        type: string
      - description: Dir
        in: query
        name: dir
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/role.ResponseList'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Response'
      summary: List role
      tags:
      - Role
  /role/update/{id}:
    put:
      consumes:
      - application/json
      description: Update role
      operationId: UpdateRole
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Role Update Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/role.UpdatedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/role.Response'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Response'
      summary: Update role
      tags:
      - Role
  /user/create:
    post:
      consumes:
      - application/json
      description: Create user
      operationId: CreateUser
      parameters:
      - description: User Create Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/user.CreatedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Response'
      summary: Create user
      tags:
      - User
  /user/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user
      operationId: DeleteUser
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Response'
      summary: Delete user
      tags:
      - User
  /user/detail/{id}:
    get:
      consumes:
      - application/json
      description: Detail user
      operationId: DetailUser
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Response'
      summary: Detail user
      tags:
      - User
  /user/list:
    get:
      consumes:
      - application/json
      description: List user
      operationId: ListUser
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: FilterName
        in: query
        name: filterName
        type: string
      - description: SortFields
        in: query
        name: sortFields
        type: string
      - description: Dir
        in: query
        name: dir
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/user.ResponseList'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Response'
      summary: List user
      tags:
      - User
  /user/update/{id}:
    put:
      consumes:
      - application/json
      description: Update user
      operationId: UpdateUser
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: User Update Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/user.UpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Response'
      summary: Update user
      tags:
      - User
  /wallet/create:
    post:
      consumes:
      - application/json
      description: Create wallet
      operationId: CreateWallet
      parameters:
      - description: Wallet Create Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/wallet.CreatedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/wallet.Response'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Response'
      summary: Create wallet
      tags:
      - Wallet
  /wallet/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete wallet
      operationId: DeleteWallet
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/wallet.Response'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Response'
      summary: Delete wallet
      tags:
      - Wallet
  /wallet/detail/{id}:
    get:
      consumes:
      - application/json
      description: Detail wallet
      operationId: DetailWallet
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/wallet.Response'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Response'
      summary: Detail wallet
      tags:
      - Wallet
  /wallet/list:
    get:
      consumes:
      - application/json
      description: List wallet
      operationId: ListWallet
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: FilterName
        in: query
        name: filterName
        type: string
      - description: SortFields
        in: query
        name: sortFields
        type: string
      - description: Dir
        in: query
        name: dir
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/wallet.ResponseList'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Response'
      summary: List wallet
      tags:
      - Wallet
  /wallet/update/{id}:
    put:
      consumes:
      - application/json
      description: Update wallet
      operationId: UpdateWallet
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Wallet Update Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/wallet.UpdatedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/wallet.Response'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Response'
      summary: Update wallet
      tags:
      - Wallet
swagger: "2.0"
